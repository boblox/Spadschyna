@model ContactForm
@{
    var formGroupClass = (string)null;//"form-group-sm";
    var cssClass = "input-sm";
}

<div id="ContactFormContainer" class="contact-form-container">
    @using (Ajax.BeginForm("Send", "ContactForm", null,
                        new AjaxOptions
                        {
                            HttpMethod = "POST",
                            InsertionMode = InsertionMode.Replace,
                            //UpdateTargetId = "ContactFormContainer",
                            OnFailure = "contactForm.showError",
                            OnSuccess = "contactForm.showSuccess",
                        },
                        new { @class = "contact-form", role = "form" }))
    {
        @*<p>Зворотній зв'язок</p>*@
        @CommonHelpers.ContactFormEditor(Html, model => model.NameSurname, Html.EditorFor, formGroupClass, cssClass)
        @CommonHelpers.ContactFormEditor(Html, model => model.ClientEmail, Html.EditorFor, formGroupClass, cssClass)
        @CommonHelpers.ContactFormEditor(Html, model => model.Description, Html.EditorFor, formGroupClass, cssClass)
        @Html.HiddenFor(model => model.EmailFrom)
        @Html.HiddenFor(model => model.EmailTo)

        <div class="form-group">
            <input type="submit" class="btn btn-default btn-send-form" value="@Localization.ContactFormSend" />
        </div>
    }
</div>

<script type="text/javascript">
    var contactForm = function () {
        return {
            showError: function () {
                showDialog("Нажаль сталась помилка і ми не змогли відправити форму:(");
            },
            showSuccess: function (result) {
                if (result.success) {
                    $("#ContactFormContainer").css('visibility', 'hidden');
                    showDialog("Дякуємо. Ваше запитання було відправлено.");
                } else {
                    showDialog("Нажаль сталась помилка і ми не змогли відправити форму:(");
                }
            }
        }
    }();

    //jQuery.validator.setDefaults({
    //    highlight: function (element, errorClass, validClass) {
    //        if (element.type === 'radio') {
    //            this.findByName(element.name).addClass(errorClass).removeClass(validClass);
    //        } else {
    //            $(element).addClass(errorClass).removeClass(validClass);
    //            $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
    //        }
    //    },
    //    unhighlight: function (element, errorClass, validClass) {
    //        if (element.type === 'radio') {
    //            this.findByName(element.name).removeClass(errorClass).addClass(validClass);
    //        } else {
    //            $(element).removeClass(errorClass).addClass(validClass);
    //            $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
    //        }
    //    }
    //});

    //$(function () {
    //    $("span.field-validation-valid, span.field-validation-error").addClass('help-block');
    //    $("div.form-group").has("span.field-validation-error").addClass('has-error');
    //    $("div.validation-summary-errors").has("li:visible").addClass("alert alert-block alert-danger");
    //});
</script>